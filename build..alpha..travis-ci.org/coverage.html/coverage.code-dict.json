{"/home/travis/build/npmtest/node-npmtest-angular-crypto/test.js":"/* istanbul instrument in package npmtest_angular_crypto */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular-crypto/lib.npmtest_angular_crypto.js":"/* istanbul instrument in package npmtest_angular_crypto */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_angular_crypto = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_angular_crypto = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-angular-crypto/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-angular-crypto && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_angular_crypto */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_angular_crypto\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_angular_crypto.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_angular_crypto.rollup.js'] =\n            local.assetsDict['/assets.npmtest_angular_crypto.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_angular_crypto.__dirname + '/lib.npmtest_angular_crypto.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/angular-crypto.js":"/*\n  Angular-Crypto - v0.0.1 \n  2014-01-04\n*/\n(function(window, angular, Math, undefined) {\n    angular.module(\"gdi2290.crypto\", [ \"gdi2290.crypto-md5\", \"gdi2290.crypto-base64\" ]);\n    angular.module(\"ngCrypto\", [ \"gdi2290.crypto\" ]);\n    angular.module(\"angular-crypto\", [ \"gdi2290.crypto\" ]);\n    angular.module(\"gdi2290.crypto-md5\", []);\n    angular.module(\"gdi2290.crypto-base64\", []);\n    \"use strict\";\n    angular.module(\"gdi2290.crypto-base64\").factory(\"base64\", function($window) {\n        var keyStr = \"ABCDEFGHIJKLMNOP\" + \"QRSTUVWXYZabcdef\" + \"ghijklmnopqrstuv\" + \"wxyz0123456789+/\" + \"=\";\n        return {\n            encode: function(input) {\n                var output = \"\";\n                var chr1, chr2, chr3 = \"\";\n                var enc1, enc2, enc3, enc4 = \"\";\n                var i = 0;\n                do {\n                    chr1 = input.charCodeAt(i++);\n                    chr2 = input.charCodeAt(i++);\n                    chr3 = input.charCodeAt(i++);\n                    enc1 = chr1 >> 2;\n                    enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                    enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                    enc4 = chr3 & 63;\n                    if ($window.isNaN(chr2)) {\n                        enc3 = enc4 = 64;\n                    } else if ($window.isNaN(chr3)) {\n                        enc4 = 64;\n                    }\n                    output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n                    chr1 = chr2 = chr3 = \"\";\n                    enc1 = enc2 = enc3 = enc4 = \"\";\n                } while (i < input.length);\n                return output;\n            },\n            decode: function(input) {\n                var output = \"\";\n                var chr1, chr2, chr3 = \"\";\n                var enc1, enc2, enc3, enc4 = \"\";\n                var i = 0;\n                var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n                if (base64test.exec(input)) {\n                    $window.alert(\"There were invalid base64 characters in the input text.\\n\" + \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" + \"Expect errors in decoding.\");\n                }\n                input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n                do {\n                    enc1 = keyStr.indexOf(input.charAt(i++));\n                    enc2 = keyStr.indexOf(input.charAt(i++));\n                    enc3 = keyStr.indexOf(input.charAt(i++));\n                    enc4 = keyStr.indexOf(input.charAt(i++));\n                    chr1 = enc1 << 2 | enc2 >> 4;\n                    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n                    chr3 = (enc3 & 3) << 6 | enc4;\n                    output = output + String.fromCharCode(chr1);\n                    if (enc3 != 64) {\n                        output = output + String.fromCharCode(chr2);\n                    }\n                    if (enc4 != 64) {\n                        output = output + String.fromCharCode(chr3);\n                    }\n                    chr1 = chr2 = chr3 = \"\";\n                    enc1 = enc2 = enc3 = enc4 = \"\";\n                } while (i < input.length);\n                return output;\n            }\n        };\n    });\n    \"use strict\";\n    angular.module(\"gdi2290.crypto-md5\").factory(\"md5\", function() {\n        var md5 = {\n            createHash: function(str) {\n                var xl;\n                var rotateLeft = function(lValue, iShiftBits) {\n                    return lValue << iShiftBits | lValue >>> 32 - iShiftBits;\n                };\n                var addUnsigned = function(lX, lY) {\n                    var lX4, lY4, lX8, lY8, lResult;\n                    lX8 = lX & 2147483648;\n                    lY8 = lY & 2147483648;\n                    lX4 = lX & 1073741824;\n                    lY4 = lY & 1073741824;\n                    lResult = (lX & 1073741823) + (lY & 1073741823);\n                    if (lX4 & lY4) {\n                        return lResult ^ 2147483648 ^ lX8 ^ lY8;\n                    }\n                    if (lX4 | lY4) {\n                        if (lResult & 1073741824) {\n                            return lResult ^ 3221225472 ^ lX8 ^ lY8;\n                        } else {\n                            return lResult ^ 1073741824 ^ lX8 ^ lY8;\n                        }\n                    } else {\n                        return lResult ^ lX8 ^ lY8;\n                    }\n                };\n                var _F = function(x, y, z) {\n                    return x & y | ~x & z;\n                };\n                var _G = function(x, y, z) {\n                    return x & z | y & ~z;\n                };\n                var _H = function(x, y, z) {\n                    return x ^ y ^ z;\n                };\n                var _I = function(x, y, z) {\n                    return y ^ (x | ~z);\n                };\n                var _FF = function(a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n                var _GG = function(a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n                var _HH = function(a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n                var _II = function(a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n                var convertToWordArray = function(str) {\n                    var lWordCount;\n                    var lMessageLength = str.length;\n                    var lNumberOfWords_temp1 = lMessageLength + 8;\n                    var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - lNumberOfWords_temp1 % 64) / 64;\n                    var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n                    var lWordArray = new Array(lNumberOfWords - 1);\n                    var lBytePosition = 0;\n                    var lByteCount = 0;\n                    while (lByteCount < lMessageLength) {\n                        lWordCount = (lByteCount - lByteCount % 4) / 4;\n                        lBytePosition = lByteCount % 4 * 8;\n                        lWordArray[lWordCount] = lWordArray[lWordCount] | str.charCodeAt(lByteCount) << lBytePosition;\n                        lByteCount++;\n                    }\n                    lWordCount = (lByteCount - lByteCount % 4) / 4;\n                    lBytePosition = lByteCount % 4 * 8;\n                    lWordArray[lWordCount] = lWordArray[lWordCount] | 128 << lBytePosition;\n                    lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n                    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n                    return lWordArray;\n                };\n                var wordToHex = function(lValue) {\n                    var wordToHexValue = \"\", wordToHexValue_temp = \"\", lByte, lCount;\n                    for (lCount = 0; lCount <= 3; lCount++) {\n                        lByte = lValue >>> lCount * 8 & 255;\n                        wordToHexValue_temp = \"0\" + lByte.toString(16);\n                        wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length - 2, 2);\n                    }\n                    return wordToHexValue;\n                };\n                var x = [], k, AA, BB, CC, DD, a, b, c, d, S11 = 7, S12 = 12, S13 = 17, S14 = 22, S21 = 5, S22 = 9, S23 = 14, S24 = 20, S31 = 4, S32 = 11, S33 = 16, S34 = 23, S41 = 6, S42 = 10, S43 = 15, S44 = 21;\n                x = convertToWordArray(str);\n                a = 1732584193;\n                b = 4023233417;\n                c = 2562383102;\n                d = 271733878;\n                xl = x.length;\n                for (k = 0; k < xl; k += 16) {\n                    AA = a;\n                    BB = b;\n                    CC = c;\n                    DD = d;\n                    a = _FF(a, b, c, d, x[k + 0], S11, 3614090360);\n                    d = _FF(d, a, b, c, x[k + 1], S12, 3905402710);\n                    c = _FF(c, d, a, b, x[k + 2], S13, 606105819);\n                    b = _FF(b, c, d, a, x[k + 3], S14, 3250441966);\n                    a = _FF(a, b, c, d, x[k + 4], S11, 4118548399);\n                    d = _FF(d, a, b, c, x[k + 5], S12, 1200080426);\n                    c = _FF(c, d, a, b, x[k + 6], S13, 2821735955);\n                    b = _FF(b, c, d, a, x[k + 7], S14, 4249261313);\n                    a = _FF(a, b, c, d, x[k + 8], S11, 1770035416);\n                    d = _FF(d, a, b, c, x[k + 9], S12, 2336552879);\n                    c = _FF(c, d, a, b, x[k + 10], S13, 4294925233);\n                    b = _FF(b, c, d, a, x[k + 11], S14, 2304563134);\n                    a = _FF(a, b, c, d, x[k + 12], S11, 1804603682);\n                    d = _FF(d, a, b, c, x[k + 13], S12, 4254626195);\n                    c = _FF(c, d, a, b, x[k + 14], S13, 2792965006);\n                    b = _FF(b, c, d, a, x[k + 15], S14, 1236535329);\n                    a = _GG(a, b, c, d, x[k + 1], S21, 4129170786);\n                    d = _GG(d, a, b, c, x[k + 6], S22, 3225465664);\n                    c = _GG(c, d, a, b, x[k + 11], S23, 643717713);\n                    b = _GG(b, c, d, a, x[k + 0], S24, 3921069994);\n                    a = _GG(a, b, c, d, x[k + 5], S21, 3593408605);\n                    d = _GG(d, a, b, c, x[k + 10], S22, 38016083);\n                    c = _GG(c, d, a, b, x[k + 15], S23, 3634488961);\n                    b = _GG(b, c, d, a, x[k + 4], S24, 3889429448);\n                    a = _GG(a, b, c, d, x[k + 9], S21, 568446438);\n                    d = _GG(d, a, b, c, x[k + 14], S22, 3275163606);\n                    c = _GG(c, d, a, b, x[k + 3], S23, 4107603335);\n                    b = _GG(b, c, d, a, x[k + 8], S24, 1163531501);\n                    a = _GG(a, b, c, d, x[k + 13], S21, 2850285829);\n                    d = _GG(d, a, b, c, x[k + 2], S22, 4243563512);\n                    c = _GG(c, d, a, b, x[k + 7], S23, 1735328473);\n                    b = _GG(b, c, d, a, x[k + 12], S24, 2368359562);\n                    a = _HH(a, b, c, d, x[k + 5], S31, 4294588738);\n                    d = _HH(d, a, b, c, x[k + 8], S32, 2272392833);\n                    c = _HH(c, d, a, b, x[k + 11], S33, 1839030562);\n                    b = _HH(b, c, d, a, x[k + 14], S34, 4259657740);\n                    a = _HH(a, b, c, d, x[k + 1], S31, 2763975236);\n                    d = _HH(d, a, b, c, x[k + 4], S32, 1272893353);\n                    c = _HH(c, d, a, b, x[k + 7], S33, 4139469664);\n                    b = _HH(b, c, d, a, x[k + 10], S34, 3200236656);\n                    a = _HH(a, b, c, d, x[k + 13], S31, 681279174);\n                    d = _HH(d, a, b, c, x[k + 0], S32, 3936430074);\n                    c = _HH(c, d, a, b, x[k + 3], S33, 3572445317);\n                    b = _HH(b, c, d, a, x[k + 6], S34, 76029189);\n                    a = _HH(a, b, c, d, x[k + 9], S31, 3654602809);\n                    d = _HH(d, a, b, c, x[k + 12], S32, 3873151461);\n                    c = _HH(c, d, a, b, x[k + 15], S33, 530742520);\n                    b = _HH(b, c, d, a, x[k + 2], S34, 3299628645);\n                    a = _II(a, b, c, d, x[k + 0], S41, 4096336452);\n                    d = _II(d, a, b, c, x[k + 7], S42, 1126891415);\n                    c = _II(c, d, a, b, x[k + 14], S43, 2878612391);\n                    b = _II(b, c, d, a, x[k + 5], S44, 4237533241);\n                    a = _II(a, b, c, d, x[k + 12], S41, 1700485571);\n                    d = _II(d, a, b, c, x[k + 3], S42, 2399980690);\n                    c = _II(c, d, a, b, x[k + 10], S43, 4293915773);\n                    b = _II(b, c, d, a, x[k + 1], S44, 2240044497);\n                    a = _II(a, b, c, d, x[k + 8], S41, 1873313359);\n                    d = _II(d, a, b, c, x[k + 15], S42, 4264355552);\n                    c = _II(c, d, a, b, x[k + 6], S43, 2734768916);\n                    b = _II(b, c, d, a, x[k + 13], S44, 1309151649);\n                    a = _II(a, b, c, d, x[k + 4], S41, 4149444226);\n                    d = _II(d, a, b, c, x[k + 11], S42, 3174756917);\n                    c = _II(c, d, a, b, x[k + 2], S43, 718787259);\n                    b = _II(b, c, d, a, x[k + 9], S44, 3951481745);\n                    a = addUnsigned(a, AA);\n                    b = addUnsigned(b, BB);\n                    c = addUnsigned(c, CC);\n                    d = addUnsigned(d, DD);\n                }\n                var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\n                return temp.toLowerCase();\n            }\n        };\n        return {\n            encode: md5.createHash,\n            decode: angular.noop\n        };\n    });\n})(this, this.angular, this.Math, void 0);","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/Gruntfile.js":"'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n  require('load-grunt-tasks')(grunt);\n  require('time-grunt')(grunt);\n\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    bwr: grunt.file.readJSON('bower.json'),\n    concat: {\n      dist:{}\n    },\n    ngmin: {\n      dist: {}\n    },\n    uglify: {\n      options: {\n        report: 'min',\n        enclose: {\n          'this': 'window',\n          'this.angular': 'angular',\n          'this.Math': 'Math',\n          'void 0': 'undefined'\n        },\n        banner: '/*\\n  <%= pkg.name %> - v<%= pkg.version %> \\n  ' +\n          '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n*/\\n'+\n        '',\n      },\n      dist: {\n        options: {\n          beautify: false,\n          mangle: false, // true of ngmin\n          compress: {\n            global_defs: {\n              'DEBUG': false\n            },\n            dead_code: true\n          },\n          sourceMap: '<%= bwr.name %>.min.js.map'\n        },\n        files: {\n          '<%= bwr.name %>.min.js': ['./lib/index.js', './lib/*/*.js', './lib/directives.js', './lib/filters.js']\n        }\n      },\n      src: {\n        options: {\n          beautify: true,\n          mangle: false,\n          compress: false\n        },\n        files: {\n          '<%= bwr.name %>.js': ['./lib/index.js', './lib/*/*.js', './lib/directives.js', './lib/filters.js']\n        }\n      }\n    }\n  });\n\n\n  grunt.registerTask('test', [\n  ]);\n\n  grunt.registerTask('build', [\n    'concat',\n    'ngmin',\n    'uglify'\n  ]);\n\n  grunt.registerTask('default', [\n    'build'\n  ]);\n};\n","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/lib/directives.js":"","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/lib/filters.js":"","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/lib/index.js":"\nangular.module('gdi2290.crypto', [\n  'gdi2290.crypto-md5',\n  'gdi2290.crypto-base64'\n]);\n\nangular.module('ngCrypto', ['gdi2290.crypto']);\nangular.module('angular-crypto', ['gdi2290.crypto']);\n\nangular.module('gdi2290.crypto-md5', []);\nangular.module('gdi2290.crypto-base64', []);\n","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/lib/base64/base64.js":"'use strict';\n\nangular.module('gdi2290.crypto-base64')\n.factory('base64', function($window) {\n  var keyStr = 'ABCDEFGHIJKLMNOP' +\n      'QRSTUVWXYZabcdef' +\n      'ghijklmnopqrstuv' +\n      'wxyz0123456789+/' +\n      '=';\n  return {\n    encode: function (input) {\n      var output = '';\n      var chr1, chr2, chr3 = '';\n      var enc1, enc2, enc3, enc4 = '';\n      var i = 0;\n\n      do {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if ($window.isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if ($window.isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output +\n            keyStr.charAt(enc1) +\n            keyStr.charAt(enc2) +\n            keyStr.charAt(enc3) +\n            keyStr.charAt(enc4);\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n      } while (i < input.length);\n\n      return output;\n    },\n    decode: function (input) {\n      var output = '';\n      var chr1, chr2, chr3 = '';\n      var enc1, enc2, enc3, enc4 = '';\n      var i = 0;\n\n      // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n      var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n      if (base64test.exec(input)) {\n        $window.alert(\"There were invalid base64 characters in the input text.\\n\" +\n            \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\n            \"Expect errors in decoding.\");\n      }\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n      do {\n        enc1 = keyStr.indexOf(input.charAt(i++));\n        enc2 = keyStr.indexOf(input.charAt(i++));\n        enc3 = keyStr.indexOf(input.charAt(i++));\n        enc4 = keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n          output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n          output = output + String.fromCharCode(chr3);\n        }\n\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n\n      } while (i < input.length);\n\n        return output;\n    } // end decode\n  }; // end return\n});\n","/home/travis/build/npmtest/node-npmtest-angular-crypto/node_modules/angular-crypto/lib/md5/md5.js":"'use strict';\n\nangular.module('gdi2290.crypto-md5')\n.factory('md5', function() {\n\n  var md5 = {\n\n   createHash: function(str) {\n\n    var xl;\n\n    var rotateLeft = function (lValue, iShiftBits) {\n     return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n    };\n\n    var addUnsigned = function (lX, lY) {\n     var lX4, lY4, lX8, lY8, lResult;\n     lX8 = (lX & 0x80000000);\n     lY8 = (lY & 0x80000000);\n     lX4 = (lX & 0x40000000);\n     lY4 = (lY & 0x40000000);\n     lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n     if (lX4 & lY4) {\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n     }\n     if (lX4 | lY4) {\n      if (lResult & 0x40000000) {\n       return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n      } else {\n       return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n      }\n     } else {\n      return (lResult ^ lX8 ^ lY8);\n     }\n    };\n\n    var _F = function (x, y, z) {\n     return (x & y) | ((~x) & z);\n    };\n    var _G = function (x, y, z) {\n     return (x & z) | (y & (~z));\n    };\n    var _H = function (x, y, z) {\n     return (x ^ y ^ z);\n    };\n    var _I = function (x, y, z) {\n     return (y ^ (x | (~z)));\n    };\n\n    var _FF = function (a, b, c, d, x, s, ac) {\n     a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));\n     return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var _GG = function (a, b, c, d, x, s, ac) {\n     a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));\n     return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var _HH = function (a, b, c, d, x, s, ac) {\n     a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));\n     return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var _II = function (a, b, c, d, x, s, ac) {\n     a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));\n     return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var convertToWordArray = function (str) {\n     var lWordCount;\n     var lMessageLength = str.length;\n     var lNumberOfWords_temp1 = lMessageLength + 8;\n     var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\n     var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n     var lWordArray = new Array(lNumberOfWords - 1);\n     var lBytePosition = 0;\n     var lByteCount = 0;\n     while (lByteCount < lMessageLength) {\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n      lBytePosition = (lByteCount % 4) * 8;\n      lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount) << lBytePosition));\n      lByteCount++;\n     }\n     lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n     lBytePosition = (lByteCount % 4) * 8;\n     lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\n     lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n     lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n     return lWordArray;\n    };\n\n    var wordToHex = function (lValue) {\n     var wordToHexValue = '',\n      wordToHexValue_temp = '',\n      lByte, lCount;\n     for (lCount = 0; lCount <= 3; lCount++) {\n      lByte = (lValue >>> (lCount * 8)) & 255;\n      wordToHexValue_temp = '0' + lByte.toString(16);\n      wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length - 2, 2);\n     }\n     return wordToHexValue;\n    };\n\n    var x = [],\n     k, AA, BB, CC, DD, a, b, c, d, S11 = 7,\n     S12 = 12,\n     S13 = 17,\n     S14 = 22,\n     S21 = 5,\n     S22 = 9,\n     S23 = 14,\n     S24 = 20,\n     S31 = 4,\n     S32 = 11,\n     S33 = 16,\n     S34 = 23,\n     S41 = 6,\n     S42 = 10,\n     S43 = 15,\n     S44 = 21;\n\n    //str = this.utf8_encode(str);\n    x = convertToWordArray(str);\n    a = 0x67452301;\n    b = 0xEFCDAB89;\n    c = 0x98BADCFE;\n    d = 0x10325476;\n\n    xl = x.length;\n    for (k = 0; k < xl; k += 16) {\n     AA = a;\n     BB = b;\n     CC = c;\n     DD = d;\n     a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\n     d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\n     c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\n     b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\n     a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\n     d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\n     c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\n     b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\n     a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\n     d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\n     c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\n     b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\n     a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\n     d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\n     c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\n     b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\n     a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\n     d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\n     c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\n     b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\n     a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\n     d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n     c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\n     b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\n     a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\n     d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\n     c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\n     b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\n     a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\n     d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\n     c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\n     b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\n     a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\n     d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\n     c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\n     b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\n     a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\n     d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\n     c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\n     b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\n     a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\n     d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\n     c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\n     b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\n     a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\n     d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\n     c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\n     b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\n     a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244);\n     d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\n     c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\n     b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\n     a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\n     d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\n     c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\n     b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\n     a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\n     d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\n     c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314);\n     b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\n     a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\n     d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\n     c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\n     b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\n     a = addUnsigned(a, AA);\n     b = addUnsigned(b, BB);\n     c = addUnsigned(c, CC);\n     d = addUnsigned(d, DD);\n    }\n\n    var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\n\n    return temp.toLowerCase();\n   }\n\n  };\n\n  return {\n    encode: md5.createHash,\n    decode: angular.noop\n  };\n});\n"}